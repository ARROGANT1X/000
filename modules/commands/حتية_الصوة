module.exports.run = async function({ api, event, args }) {
  const subCommand = args[0];
  let data = JSON.parse(fs.readFileSync(dataPath));

  if (!data[event.threadID]) {
    data[event.threadID] = { enabled: false, originalImagePath: null };
  }

  if (subCommand === "تفعيل") {
    if (event.type !== "message_reply") {
      return api.sendMessage("❌ يجب الرد على صورة لتعيين الصورة الأصلية للمجموعة.", event.threadID, event.messageID);
    }
    if (!event.messageReply.attachments || event.messageReply.attachments.length == 0) {
      return api.sendMessage("❌ يجب الرد على صورة لتعيين الصورة الأصلية للمجموعة.", event.threadID, event.messageID);
    }
    if (event.messageReply.attachments.length > 1) {
      return api.sendMessage("❌ الرجاء الرد على صورة واحدة فقط!", event.threadID, event.messageID);
    }

    const imageUrl = event.messageReply.attachments[0].url;
    const originalImagePath = __dirname + `/cache/${event.threadID}_original.png`;
    const imageBuffer = (await axios.get(imageUrl, { responseType: 'arraybuffer' })).data;
    fs.writeFileSync(originalImagePath, Buffer.from(imageBuffer, 'utf-8'));

    data[event.threadID] = { enabled: true, originalImagePath: originalImagePath };
    fs.writeFileSync(dataPath, JSON.stringify(data));

    api.sendMessage("🔒 حماية صورة المجموعة مفعلة.", event.threadID, event.messageID);
  } else if (subCommand === "تعطيل") {
    data[event.threadID].enabled = false;
    fs.writeFileSync(dataPath, JSON.stringify(data));
    api.sendMessage("🔓 حماية صورة المجموعة معطلة.", event.threadID, event.messageID);
  } else {
    api.sendMessage("❗ استخدام غير صحيح. الرجاء استخدام ' حماية_الصورة تفعيل' أو ' حماية_الصورة تعطيل'.", event.threadID, event.messageID);
  }
};
